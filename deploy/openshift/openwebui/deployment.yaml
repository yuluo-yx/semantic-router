apiVersion: apps/v1
kind: Deployment
metadata:
  name: openwebui
  namespace: vllm-semantic-router-system
  labels:
    app: openwebui
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openwebui
  template:
    metadata:
      labels:
        app: openwebui
        component: frontend
    spec:
      containers:
      - name: openwebui
        image: ghcr.io/open-webui/open-webui:main
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # OpenWebUI Configuration - Connect to Envoy proxy
        - name: OPENAI_API_BASE_URL
          value: "http://semantic-router.vllm-semantic-router-system.svc.cluster.local:8801/v1"
        - name: OPENAI_API_KEY
          value: "not-needed-for-local-models"
        - name: WEBUI_SECRET_KEY
          value: "your-secret-key-change-in-production"
        - name: DATA_DIR
          value: "/app/backend/data"
        # Enable multiple OpenAI-compatible endpoints
        - name: ENABLE_OPENAI_API
          value: "true"
        # OpenShift compatible paths
        - name: HOME
          value: "/tmp/home"
        - name: TMPDIR
          value: "/tmp"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: openwebui-data
          mountPath: /app/backend/data
        - name: tmp-volume
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: openwebui-data
        persistentVolumeClaim:
          claimName: openwebui-data
      - name: tmp-volume
        emptyDir: {}
